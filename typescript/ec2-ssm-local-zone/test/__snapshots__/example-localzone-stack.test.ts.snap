// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExampleLocalZoneStack has required resources 1`] = `
{
  "Outputs": {
    "instancePrivateIp": {
      "Export": {
        "Name": "instancePrivateIp",
      },
      "Value": {
        "Fn::GetAtt": [
          "InstanceLz2EEB41BC641a0cee2d30d2eb",
          "PrivateIp",
        ],
      },
    },
    "instancePublicIp": {
      "Export": {
        "Name": "instancePublicIp",
      },
      "Value": {
        "Fn::GetAtt": [
          "InstanceLzPublic026D930Fa54333bab1a299b4",
          "PublicIp",
        ],
      },
    },
    "natInstancePublicIp": {
      "Export": {
        "Name": "natInstancePublicIp",
      },
      "Value": {
        "Fn::GetAtt": [
          "NatInstanceLocalZone7646EDB837a6216703c73337",
          "PublicIp",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2022amikerneldefaultx8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2022-ami-kernel-default-x86_64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "InstanceLz2EEB41BC641a0cee2d30d2eb": {
      "DependsOn": [
        "InstanceRoleWithSsmPolicyEB62AF9B",
      ],
      "Properties": {
        "AvailabilityZone": "eu-north-1-hel-1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 8,
              "VolumeType": "gp2",
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "InstanceLzInstanceProfileC47DF8F7",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2022amikerneldefaultx8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "c5.2xlarge",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "InstanceLzInstanceSecurityGroup853C78B5",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcprivateSubnet2Subnet2DE7549C",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/InstanceLz",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "InstanceLzInstanceProfileC47DF8F7": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleWithSsmPolicyEB62AF9B",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "InstanceLzInstanceSecurityGroup853C78B5": {
      "Properties": {
        "GroupDescription": "ExampleLocalZoneStack/InstanceLz/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/InstanceLz",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InstanceLzPublic026D930Fa54333bab1a299b4": {
      "DependsOn": [
        "InstanceRoleWithSsmPolicyEB62AF9B",
      ],
      "Properties": {
        "AvailabilityZone": "eu-north-1-hel-1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 8,
              "VolumeType": "gp2",
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "InstanceLzPublicInstanceProfile8631EF1C",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2022amikerneldefaultx8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "c5.2xlarge",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "WebServerSecurityGroupEFBF953E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/InstanceLzPublic",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
yum install -y nginx
chkconfig nginx on
service nginx start",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "InstanceLzPublicInstanceProfile8631EF1C": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleWithSsmPolicyEB62AF9B",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "InstanceRoleWithSsmPolicyEB62AF9B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "NatInstanceLocalZone7646EDB837a6216703c73337": {
      "DependsOn": [
        "InstanceRoleWithSsmPolicyEB62AF9B",
      ],
      "Properties": {
        "AvailabilityZone": "eu-north-1-hel-1a",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "Encrypted": true,
              "VolumeSize": 8,
              "VolumeType": "gp2",
            },
          },
        ],
        "IamInstanceProfile": {
          "Ref": "NatInstanceLocalZoneInstanceProfile6AA4F644",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2022amikerneldefaultx8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "c5.2xlarge",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "NatInstanceSecurityGroup29FF558D",
              "GroupId",
            ],
          },
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/NatInstanceLocalZone",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
sudo sysctl -w net.ipv4.ip_forward=1
sudo yum -y install iptables-services
sudo iptables -t nat -A POSTROUTING -o ens5 -j MASQUERADE
sudo iptables-save",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "NatInstanceLocalZoneInstanceProfile6AA4F644": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleWithSsmPolicyEB62AF9B",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "NatInstanceSecurityGroup29FF558D": {
      "Properties": {
        "GroupDescription": "Security group for the NAT instance",
        "GroupName": "ExampleLocalZoneStackNatInstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "172.31.100.0/24",
            "Description": "from 172.31.100.0/24:ALL PORTS",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535,
          },
          {
            "CidrIp": "172.31.100.0/24",
            "Description": "from 172.31.100.0/24:ALL ICMP",
            "FromPort": -1,
            "IpProtocol": "icmp",
            "ToPort": -1,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "172.31.100.0/24",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "Vpcec2messages428CD3A8": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "Vpcec2messagesSecurityGroup8F0EC38D",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ec2messages",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VpcprivateSubnet1SubnetCEAD3716",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "Vpcec2messagesSecurityGroup8F0EC38D": {
      "Properties": {
        "GroupDescription": "ExampleLocalZoneStack/Vpc/ec2-messages/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VpcprivateSubnet1RouteTable1979EACB": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/privateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet1RouteTableAssociationEEBD93CE": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcprivateSubnet1RouteTable1979EACB",
        },
        "SubnetId": {
          "Ref": "VpcprivateSubnet1SubnetCEAD3716",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet1SubnetCEAD3716": {
      "Properties": {
        "AvailabilityZone": "eu-north-1a",
        "CidrBlock": "172.31.100.128/26",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/privateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcprivateSubnet2Internet1E0A60C7": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "NatInstanceLocalZone7646EDB837a6216703c73337",
        },
        "RouteTableId": {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivateSubnet2RouteTable4D0FFC8C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/privateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet2RouteTableAssociationB691E645": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
        "SubnetId": {
          "Ref": "VpcprivateSubnet2Subnet2DE7549C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet2Subnet2DE7549C": {
      "Properties": {
        "AvailabilityZone": "eu-north-1-hel-1a",
        "CidrBlock": "172.31.100.192/26",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/privateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": {
      "Properties": {
        "AvailabilityZone": "eu-north-1a",
        "CidrBlock": "172.31.100.0/26",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/publicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77",
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet2SubnetE34B022A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet2SubnetE34B022A": {
      "Properties": {
        "AvailabilityZone": "eu-north-1-hel-1a",
        "CidrBlock": "172.31.100.64/26",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc/publicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "Vpcssm10BF34F5": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcssmSecurityGroupF0BC94B3",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ssm",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VpcprivateSubnet1SubnetCEAD3716",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcssmSecurityGroupF0BC94B3": {
      "Properties": {
        "GroupDescription": "ExampleLocalZoneStack/Vpc/ssm/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Vpcssmmessages8A867D55": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "VpcssmmessagesSecurityGroupB9AC815E",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ssmmessages",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VpcprivateSubnet1SubnetCEAD3716",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VpcssmmessagesSecurityGroupB9AC815E": {
      "Properties": {
        "GroupDescription": "ExampleLocalZoneStack/Vpc/ssm-messages/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "Vpc8378EB38",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "Vpc8378EB38",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ExampleLocalZoneStack/Vpc",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WebServerSecurityGroupEFBF953E": {
      "Properties": {
        "GroupDescription": "Security group for the web server",
        "GroupName": "ExampleLocalZoneStackWebServerSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
